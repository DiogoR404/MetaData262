[{"path":"./test262/test/built-ins/Array/prototype/at/index-argument-tointeger.js","esid":" sec-array.prototype.at","description":" >Property type and descriptor.\n","info":" |Array.prototype.at( index )\n\nLet relativeIndex be ? ToInteger(index).\n\n","features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/Array/prototype/at/index-non-numeric-argument-tointeger-invalid.js","esid":" sec-array.prototype.at","description":" >Property type and descriptor.\n","info":" |Array.prototype.at( index )\n\nLet relativeIndex be ? ToInteger(index).\n\n","features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/Array/prototype/at/index-non-numeric-argument-tointeger.js","esid":" sec-array.prototype.at","description":" >Property type and descriptor.\n","info":" |Array.prototype.at( index )\n\nLet relativeIndex be ? ToInteger(index).\n\n","features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/Array/prototype/at/length.js","esid":" sec-array.prototype.at","description":" >Array.prototype.at.length value and descriptor.\n","info":" |Array.prototype.at( index )\n\n17 ECMAScript Standard Built-in Objects\n\n","includes":["propertyHelper.js"],"features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/Array/prototype/at/name.js","esid":" sec-array.prototype.at","description":" >Array.prototype.at.name value and descriptor.\n","info":" |Array.prototype.at( index )\n\n17 ECMAScript Standard Built-in Objects\n\n","includes":["propertyHelper.js"],"features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/Array/prototype/at/prop-desc.js","esid":" sec-array.prototype.at","description":" >Property type and descriptor.\n","info":" |Array.prototype.at( index )\n\n17 ECMAScript Standard Built-in Objects\n","includes":["propertyHelper.js"],"features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/Array/prototype/at/return-abrupt-from-this.js","esid":" sec-array.prototype.at","description":" >Return abrupt from ToObject(this value).\n","info":" |Array.prototype.at( index )\n\nLet O be ? ToObject(this value).\n\n","features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/Array/prototype/at/returns-item-relative-index.js","esid":" sec-array.prototype.at","description":" >Returns the item value at the specified relative index\n","info":" |Array.prototype.at ( )\n\nLet O be ? ToObject(this value).\nLet len be ? LengthOfArrayLike(O).\nLet relativeIndex be ? ToInteger(index).\nIf relativeIndex ≥ 0, then\nLet k be relativeIndex.\nElse,\nLet k be len + relativeIndex.\nIf k < 0 or k ≥ len, then return undefined.\nReturn ? Get(O, ! ToString(k)).\n\n","features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/Array/prototype/at/returns-item.js","esid":" sec-array.prototype.at","description":" >Returns the item value at the specified index\n","info":" |Array.prototype.at ( )\n\nLet O be ? ToObject(this value).\nLet len be ? LengthOfArrayLike(O).\nLet relativeIndex be ? ToInteger(index).\nIf relativeIndex ≥ 0, then\nLet k be relativeIndex.\nElse,\nLet k be len + relativeIndex.\nIf k < 0 or k ≥ len, then return undefined.\nReturn ? Get(O, ! ToString(k)).\n\n","features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/Array/prototype/at/returns-undefined-for-holes-in-sparse-arrays.js","esid":" sec-array.prototype.at","description":" >Returns the item value at the specified index, respecting holes in sparse arrays.\n","info":" |Array.prototype.at ( )\n\nLet O be ? ToObject(this value).\nLet len be ? LengthOfArrayLike(O).\nLet relativeIndex be ? ToInteger(index).\nIf relativeIndex ≥ 0, then\nLet k be relativeIndex.\nElse,\nLet k be len + relativeIndex.\nIf k < 0 or k ≥ len, then return undefined.\nReturn ? Get(O, ! ToString(k)).\n\n","features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/Array/prototype/at/returns-undefined-for-out-of-range-index.js","esid":" sec-array.prototype.at","description":" >Returns undefined if the specified index less than or greater than the available index range.\n","info":" |Array.prototype.at( index )\n\nIf k < 0 or k ≥ len, then return undefined.\n","features":["Array.prototype.at"]},{"path":"./test262/test/built-ins/FinalizationRegistry/constructor.js","esid":" sec-finalization-registry-constructor","description":" >The FinalizationRegistry constructor is the %FinalizationRegistry% intrinsic object and the initial\nvalue of the FinalizationRegistry property of the global object.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/gc-has-one-chance-to-call-cleanupCallback.js","esid":" sec-finalization-registry-target","description":" >cleanupCallback has only one optional chance to be called for a GC that cleans up\na registered target.\n","info":" |FinalizationRegistry ( cleanupCallback )\n\nFinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n...\n4. If callback is not undefined and IsCallable(callback) is false, throw a TypeError exception.\n5. Perform ? CleanupFinalizationRegistry(finalizationRegistry, callback).\n6. Return undefined.\n\nExecution\n\nAt any time, if an object obj is not live, an ECMAScript implementation may perform the following steps atomically:\n\n1. For each WeakRef ref such that ref.[[Target]] is obj,\na. Set ref.[[Target]] to empty.\n2. For each FinalizationRegistry finalizationRegistry such that finalizationRegistry.[[Cells]] contains cell, such that cell.[[Target]] is obj,\na. Set cell.[[Target]] to empty.\nb. Optionally, perform ! HostCleanupFinalizationRegistry(finalizationRegistry).\n","features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry","async-functions","host-gc-required"],"flags":["async","non-deterministic"],"includes":["async-gc.js","compareArray.js"]},{"path":"./test262/test/built-ins/FinalizationRegistry/instance-extensible.js","esid":" sec-finalization-registry-target","description":" Instances of FinalizationRegistry are extensible","info":" |FinalizationRegistry ( cleanupCallback )\n\n...\n3. Let finalizationRegistry be ? OrdinaryCreateFromConstructor(NewTarget,\"%FinalizationRegistryPrototype%\", « [[Realm]], [[CleanupCallback]], [[Cells]], [[IsFinalizationRegistryCleanupJobActive]] »).\n...\n9. Return finalizationRegistry.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nObjectCreate ( proto [ , internalSlotsList ] )\n\n4. Set obj.[[Prototype]] to proto.\n5. Set obj.[[Extensible]] to true.\n6. Return obj.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/is-a-constructor.js","esid":" sec-ecmascript-standard-built-in-objects","description":" >The FinalizationRegistry constructor implements [[Construct]]\n","info":" |IsConstructor ( argument )\n\nThe abstract operation IsConstructor takes argument argument (an ECMAScript language value).\nIt determines if argument is a function object with a [[Construct]] internal method.\nIt performs the following steps when called:\n\nIf Type(argument) is not Object, return false.\nIf argument has a [[Construct]] internal method, return true.\nReturn false.\n","includes":["isConstructor.js"],"features":["Reflect.construct","FinalizationRegistry","arrow-function"]},{"path":"./test262/test/built-ins/FinalizationRegistry/length.js","esid":" sec-finalization-registry-target","description":" FinalizationRegistry.length property descriptor","info":" |FinalizationRegistry ( cleanupCallback )\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, has a length\nproperty whose value is an integer. Unless otherwise specified, this\nvalue is equal to the largest number of named arguments shown in the\nsubclause headings for the function description. Optional parameters\n(which are indicated with brackets: [ ]) or rest parameters (which\nare shown using the form «...name») are not included in the default\nargument count.\n\nUnless otherwise specified, the length property of a built-in\nfunction object has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/name.js","esid":" sec-finalization-registry-target","description":" FinalizationRegistry.name property descriptor","info":" |FinalizationRegistry ( value )\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, that is not\nidentified as an anonymous function has a name property whose value\nis a String. Unless otherwise specified, this value is the name that\nis given to the function in this specification. For functions that\nare specified as properties of objects, the name value is the\nproperty name string used to access the function. [...]\n\nUnless otherwise specified, the name property of a built-in function\nobject, if it exists, has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/newtarget-prototype-is-not-object.js","esid":" sec-finalization-registry-target","description":" >[[Prototype]] defaults to %FinalizationRegistryPrototype% if NewTarget.prototype is not an object.\n","info":" |FinalizationRegistry ( cleanupCallback )\n\n...\n3. Let finalizationRegistry be ? OrdinaryCreateFromConstructor(NewTarget,\"%FinalizationRegistryPrototype%\", « [[Realm]], [[CleanupCallback]], [[Cells]], [[IsFinalizationRegistryCleanupJobActive]] »).\n...\n9. Return finalizationRegistry.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\n5. Return proto.\n","features":["FinalizationRegistry","Reflect.construct","Symbol"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prop-desc.js","esid":" sec-finalization-registry-constructor","description":" >Property descriptor of FinalizationRegistry\n","info":" |17 ECMAScript Standard Built-in Objects:\n\nEvery other data property described in clauses 18 through 26 and in Annex B.2\nhas the attributes { [[Writable]]: true, [[Enumerable]]: false,\n[[Configurable]]: true } unless otherwise specified.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/proto-from-ctor-realm.js","esid":" sec-finalization-registry-target","description":" Default [[Prototype]] value derived from realm of the newTarget","info":" |FinalizationRegistry ( cleanupCallback )\n\n...\n3. Let finalizationRegistry be ? OrdinaryCreateFromConstructor(NewTarget,\"%FinalizationRegistryPrototype%\", « [[Realm]], [[CleanupCallback]], [[Cells]], [[IsFinalizationRegistryCleanupJobActive]] »).\n...\n9. Return finalizationRegistry.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\n5. Return proto.\n","features":["FinalizationRegistry","cross-realm","Reflect","Symbol"]},{"path":"./test262/test/built-ins/FinalizationRegistry/proto.js","esid":" sec-properties-of-the-finalization-registry-constructor","description":" >The prototype of FinalizationRegistry is Object.prototype\n","info":" |The value of the [[Prototype]] internal slot of the FinalizationRegistry object is the\nintrinsic object %FunctionPrototype%.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/Symbol.toStringTag.js","esid":" sec-finalization-registry-@@tostringtag","description":" >`Symbol.toStringTag` property descriptor\n","info":" |The initial value of the @@toStringTag property is the String value\n'FinalizationRegistry'.\n\nThis property has the attributes { [[Writable]]: false, [[Enumerable]]:\nfalse, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry","Symbol","Symbol.toStringTag"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/callback-not-callable-throws.js","esid":" sec-finalization-registry.prototype.cleanupSome","description":" Throws a TypeError if callback is not callable","info":" |FinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If callback is not undefined and IsCallable(callback) is false, throw a TypeError exception.\n...\n","features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/cleanup-prevented-with-reference.js","esid":" sec-finalization-registry.prototype.cleanupSome","description":" Cleanup might be prevented with a reference usage;","info":" |FinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If callback is not undefined and IsCallable(callback) is false, throw a TypeError exception.\n5. Perform ? CleanupFinalizationRegistry(finalizationRegistry, callback).\n6. Return undefined.\n","features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry","host-gc-required"],"includes":["async-gc.js"],"flags":["async","non-deterministic"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/cleanup-prevented-with-unregister.js","esid":" sec-finalization-registry.prototype.cleanupSome","description":" Cleanup might be prevented with an unregister usage","info":" |FinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If callback is not undefined and IsCallable(callback) is false, throw a TypeError exception.\n5. Perform ? CleanupFinalizationRegistry(finalizationRegistry, callback).\n6. Return undefined.\n\nFinalizationRegistry.prototype.unregister ( unregisterToken )\n\n1. Let removed be false.\n2. For each Record { [[Target]], [[Holdings]], [[UnregisterToken]] } cell that is an element of finalizationRegistry.[[Cells]], do\na. If SameValue(cell.[[UnregisterToken]], unregisterToken) is true, then\ni. Remove cell from finalizationRegistry.[[Cells]].\nii. Set removed to true.\n3. Return removed.\n","features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry","host-gc-required"],"includes":["async-gc.js"],"flags":["async","non-deterministic"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/custom-this.js","esid":" sec-finalization-registry.prototype.cleanupSome","description":" Return values applying custom this","info":" |FinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If callback is not undefined and IsCallable(callback) is false, throw a TypeError exception.\n5. Perform ! CleanupFinalizationRegistry(finalizationRegistry, callback).\n6. Return undefined.\n","features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/holdings-multiple-values.js","esid":" sec-properties-of-the-finalization-registry-constructor","description":" >Iterates over different type values in holdings\n","info":" |FinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n1. Let finalizationRegistry be the this value.\n...\n5. Perform ! CleanupFinalizationRegistry(finalizationRegistry, callback).\n...\n\nCleanupFinalizationRegistry ( finalizationRegistry [ , callback ] )\n\n...\n3. While finalizationRegistry.[[Cells]] contains a Record cell such that cell.[[WeakRefTarget]] is ~empty~, then an implementation may perform the following steps,\na. Choose any such cell.\nb. Remove cell from finalizationRegistry.[[Cells]].\nc. Perform ? Call(callback, undefined, << cell.[[HeldValue]] >>).\n...\n\n\n","features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry","Symbol","host-gc-required"],"includes":["async-gc.js"],"flags":["async","non-deterministic"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/length.js","esid":" sec-finalization-registry.prototype.cleanupSome","description":" FinalizationRegistry.prototype.cleanupSome.length property descriptor","info":" |FinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, has a length\nproperty whose value is an integer. Unless otherwise specified, this\nvalue is equal to the largest number of named arguments shown in the\nsubclause headings for the function description. Optional parameters\n(which are indicated with brackets: [ ]) or rest parameters (which\nare shown using the form «...name») are not included in the default\nargument count.\n\nUnless otherwise specified, the length property of a built-in\nfunction object has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/name.js","esid":" sec-finalization-registry.prototype.cleanupSome","description":" FinalizationRegistry.prototype.cleanupSome.name property descriptor","info":" |FinalizationRegistry.prototype.cleanupSome.name value and property descriptor\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, that is not\nidentified as an anonymous function has a name property whose value\nis a String. Unless otherwise specified, this value is the name that\nis given to the function in this specification. For functions that\nare specified as properties of objects, the name value is the\nproperty name string used to access the function. [...]\n\nUnless otherwise specified, the name property of a built-in function\nobject, if it exists, has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/not-a-constructor.js","esid":" sec-ecmascript-standard-built-in-objects","description":" >FinalizationRegistry.prototype.cleanupSome does not implement [[Construct]], is not new-able\n","info":" |ECMAScript Function Objects\n\nBuilt-in function objects that are not identified as constructors do not\nimplement the [[Construct]] internal method unless otherwise specified in\nthe description of a particular function.\n\nsec-evaluatenew\n\n...\n7. If IsConstructor(constructor) is false, throw a TypeError exception.\n...\n","includes":["isConstructor.js"],"features":["Reflect.construct","FinalizationRegistry","arrow-function"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/prop-desc.js","esid":" sec-finalization-registry.prototype.cleanupSome","description":" >Property descriptor of FinalizationRegistry.prototype.cleanupSome\n","info":" |17 ECMAScript Standard Built-in Objects:\n\nEvery other data property described in clauses 18 through 26 and in Annex B.2\nhas the attributes { [[Writable]]: true, [[Enumerable]]: false,\n[[Configurable]]: true } unless otherwise specified.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/reentrancy.js","esid":" sec-properties-of-the-finalization-registry-constructor","description":" >The cleanupSome() method can be reentered\n","info":" |FinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n","features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry","host-gc-required"],"includes":["async-gc.js"],"flags":["async","non-deterministic"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/this-does-not-have-internal-cells-throws.js","esid":" sec-finalization-registry.prototype.cleanupSome","description":" Throws a TypeError if this does not have a [[Cells]] internal slot","info":" |FinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If callback is not undefined and IsCallable(callback) is false, throw a TypeError exception.\n...\n","features":["FinalizationRegistry.prototype.cleanupSome","WeakSet","WeakMap","FinalizationRegistry","WeakRef"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/cleanupSome/this-not-object-throws.js","esid":" sec-finalization-registry.prototype.cleanupSome","description":" Throws a TypeError if this is not an Object","info":" |FinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If callback is not undefined and IsCallable(callback) is false, throw a TypeError exception.\n...\n","features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/constructor.js","esid":" sec-finalization-registry.prototype.constructor","description":" FinalizationRegistry.prototype.constructor property descriptor","info":" |FinalizationRegistry.prototype.constructor\n\nThe initial value of FinalizationRegistry.prototype.constructor is the intrinsic\nobject %FinalizationRegistry%.\n\n17 ECMAScript Standard Built-in Objects\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/prop-desc.js","description":" The property descriptor FinalizationRegistry.prototype","esid":" sec-finalization-registry.prototype","info":" |This property has the attributes { [[Writable]]: false, [[Enumerable]]: false,\n[[Configurable]]: false }.\n","features":["FinalizationRegistry"],"includes":["propertyHelper.js"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/proto.js","description":" The prototype of FinalizationRegistry.prototype is Object.prototype","esid":" sec-properties-of-the-finalization-registry-prototype-object","info":" |The value of the [[Prototype]] internal slot of the FinalizationRegistry prototype object\nis the intrinsic object %ObjectPrototype%.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/custom-this.js","esid":" sec-finalization-registry.prototype.register","description":" Return undefined (applying custom this)","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If Type(target) is not Object, throw a TypeError exception.\n4. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n5. If Type(unregisterToken) is not Object,\na. If unregisterToken is not undefined, throw a TypeError exception.\nb. Set unregisterToken to empty.\n6. Let cell be the Record { [[Target]] : target, [[Holdings]]: holdings, [[UnregisterToken]]: unregisterToken }.\n7. Append cell to finalizationRegistry.[[Cells]].\n8. Return undefined.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/holdings-any-value-type.js","esid":" sec-finalization-registry.prototype.register","description":" No restriction for the value or type of holdings","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If Type(target) is not Object, throw a TypeError exception.\n4. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n5. If Type(unregisterToken) is not Object,\na. If unregisterToken is not undefined, throw a TypeError exception.\nb. Set unregisterToken to empty.\n6. Let cell be the Record { [[Target]] : target, [[Holdings]]: holdings, [[UnregisterToken]]: unregisterToken }.\n7. Append cell to finalizationRegistry.[[Cells]].\n8. Return undefined.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/holdings-same-as-target.js","esid":" sec-finalization-registry.prototype.register","description":" holdings may be the same as target","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If Type(target) is not Object, throw a TypeError exception.\n5. If SameValue(target, holdings), throw a TypeError exception.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/length.js","esid":" sec-finalization-registry.prototype.register","description":" FinalizationRegistry.prototype.register.length property descriptor","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, has a length\nproperty whose value is an integer. Unless otherwise specified, this\nvalue is equal to the largest number of named arguments shown in the\nsubclause headings for the function description. Optional parameters\n(which are indicated with brackets: [ ]) or rest parameters (which\nare shown using the form «...name») are not included in the default\nargument count.\n\nUnless otherwise specified, the length property of a built-in\nfunction object has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/name.js","esid":" sec-finalization-registry.prototype.register","description":" FinalizationRegistry.prototype.register.name property descriptor","info":" |FinalizationRegistry.prototype.register.name value and property descriptor\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, that is not\nidentified as an anonymous function has a name property whose value\nis a String. Unless otherwise specified, this value is the name that\nis given to the function in this specification. For functions that\nare specified as properties of objects, the name value is the\nproperty name string used to access the function. [...]\n\nUnless otherwise specified, the name property of a built-in function\nobject, if it exists, has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/not-a-constructor.js","esid":" sec-ecmascript-standard-built-in-objects","description":" >FinalizationRegistry.prototype.register does not implement [[Construct]], is not new-able\n","info":" |ECMAScript Function Objects\n\nBuilt-in function objects that are not identified as constructors do not\nimplement the [[Construct]] internal method unless otherwise specified in\nthe description of a particular function.\n\nsec-evaluatenew\n\n...\n7. If IsConstructor(constructor) is false, throw a TypeError exception.\n...\n","includes":["isConstructor.js"],"features":["Reflect.construct","FinalizationRegistry","arrow-function"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/prop-desc.js","esid":" sec-finalization-registry.prototype.register","description":" >Property descriptor of FinalizationRegistry.prototype.register\n","info":" |17 ECMAScript Standard Built-in Objects:\n\nEvery other data property described in clauses 18 through 26 and in Annex B.2\nhas the attributes { [[Writable]]: true, [[Enumerable]]: false,\n[[Configurable]]: true } unless otherwise specified.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/return-undefined-register-itself.js","esid":" sec-finalization-registry.prototype.register","description":" Return undefined after registering itself","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If Type(target) is not Object, throw a TypeError exception.\n5. If SameValue(target, holdings), throw a TypeError exception.\n6. If Type(unregisterToken) is not Object,\na. If unregisterToken is not undefined, throw a TypeError exception.\nb. Set unregisterToken to empty.\n7. Let cell be the Record { [[Target]] : target, [[Holdings]]: holdings, [[UnregisterToken]]: unregisterToken }.\n8. Append cell to finalizationRegistry.[[Cells]].\n9. Return undefined.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/return-undefined.js","esid":" sec-finalization-registry.prototype.register","description":" Return undefined after registering","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If Type(target) is not Object, throw a TypeError exception.\n4. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n5. If Type(unregisterToken) is not Object,\na. If unregisterToken is not undefined, throw a TypeError exception.\nb. Set unregisterToken to empty.\n6. Let cell be the Record { [[Target]] : target, [[Holdings]]: holdings, [[UnregisterToken]]: unregisterToken }.\n7. Append cell to finalizationRegistry.[[Cells]].\n8. Return undefined.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/target-not-object-throws.js","esid":" sec-finalization-registry.prototype.register","description":" Throws a TypeError if target is not an Object","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If Type(target) is not Object, throw a TypeError exception.\n4. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n5. If Type(unregisterToken) is not Object,\na. If unregisterToken is not undefined, throw a TypeError exception.\nb. Set unregisterToken to empty.\n...\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/this-does-not-have-internal-target-throws.js","esid":" sec-finalization-registry.prototype.register","description":" Throws a TypeError if this does not have a [[Cells]] internal slot","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If Type(target) is not Object, throw a TypeError exception.\n4. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n...\n","features":["WeakSet","WeakMap","FinalizationRegistry","WeakRef"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/this-not-object-throws.js","esid":" sec-finalization-registry.prototype.register","description":" Throws a TypeError if this is not an Object","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If Type(target) is not Object, throw a TypeError exception.\n4. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n5. If Type(unregisterToken) is not Object,\na. If unregisterToken is not undefined, throw a TypeError exception.\n...\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/unregisterToken-not-object-or-undefined-throws.js","esid":" sec-finalization-registry.prototype.register","description":" Throws a TypeError if unregisterToken is not an Object or undefined","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If Type(target) is not Object, throw a TypeError exception.\n4. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n5. If Type(unregisterToken) is not Object,\na. If unregisterToken is not undefined, throw a TypeError exception.\n...\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/unregisterToken-same-as-holdings-and-target.js","esid":" sec-finalization-registry.prototype.register","description":" unregisterToken may be the same as holdings and target","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If Type(target) is not Object, throw a TypeError exception.\n5. If SameValue(target, holdings), throw a TypeError exception.\n6. If Type(unregisterToken) is not Object,\na. If unregisterToken is not undefined, throw a TypeError exception.\nb. Set unregisterToken to empty.\n7. Let cell be the Record { [[Target]] : target, [[Holdings]]: holdings, [[UnregisterToken]]: unregisterToken }.\n8. Append cell to finalizationRegistry.[[Cells]].\n9. Return undefined.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/unregisterToken-same-as-holdings.js","esid":" sec-finalization-registry.prototype.register","description":" unregisterToken may be the same as holdings","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If Type(target) is not Object, throw a TypeError exception.\n4. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n5. If Type(unregisterToken) is not Object,\na. If unregisterToken is not undefined, throw a TypeError exception.\nb. Set unregisterToken to empty.\n6. Let cell be the Record { [[Target]] : target, [[Holdings]]: holdings, [[UnregisterToken]]: unregisterToken }.\n7. Append cell to finalizationRegistry.[[Cells]].\n8. Return undefined.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/register/unregisterToken-same-as-target.js","esid":" sec-finalization-registry.prototype.register","description":" unregisterToken may be the same as target","info":" |FinalizationRegistry.prototype.register ( target , holdings [, unregisterToken ] )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If Type(target) is not Object, throw a TypeError exception.\n4. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n5. If Type(unregisterToken) is not Object,\na. If unregisterToken is not undefined, throw a TypeError exception.\nb. Set unregisterToken to empty.\n6. Let cell be the Record { [[Target]] : target, [[Holdings]]: holdings, [[UnregisterToken]]: unregisterToken }.\n7. Append cell to finalizationRegistry.[[Cells]].\n8. Return undefined.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/unregister/custom-this.js","esid":" sec-finalization-registry.prototype.unregister","description":" Return values applying custom this","info":" |FinalizationRegistry.prototype.unregister ( unregisterToken )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If Type(unregisterToken) is not Object, throw a TypeError exception.\n5. Let removed be false.\n6. For each Record { [[Target]], [[Holdings]], [[UnregisterToken]] } cell that is an element of finalizationRegistry.[[Cells]], do\na. If SameValue(cell.[[UnregisterToken]], unregisterToken) is true, then\ni. Remove cell from finalizationRegistry.[[Cells]].\nii. Set removed to true.\n7. Return removed.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/unregister/length.js","esid":" sec-finalization-registry.prototype.unregister","description":" FinalizationRegistry.prototype.unregister.length property descriptor","info":" |FinalizationRegistry.prototype.unregister ( unregisterToken )\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, has a length\nproperty whose value is an integer. Unless otherwise specified, this\nvalue is equal to the largest number of named arguments shown in the\nsubclause headings for the function description. Optional parameters\n(which are indicated with brackets: [ ]) or rest parameters (which\nare shown using the form «...name») are not included in the default\nargument count.\n\nUnless otherwise specified, the length property of a built-in\nfunction object has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/unregister/name.js","esid":" sec-finalization-registry.prototype.unregister","description":" FinalizationRegistry.prototype.unregister.name property descriptor","info":" |FinalizationRegistry.prototype.unregister.name value and property descriptor\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, that is not\nidentified as an anonymous function has a name property whose value\nis a String. Unless otherwise specified, this value is the name that\nis given to the function in this specification. For functions that\nare specified as properties of objects, the name value is the\nproperty name string used to access the function. [...]\n\nUnless otherwise specified, the name property of a built-in function\nobject, if it exists, has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/unregister/not-a-constructor.js","esid":" sec-ecmascript-standard-built-in-objects","description":" >FinalizationRegistry.prototype.unregister does not implement [[Construct]], is not new-able\n","info":" |ECMAScript Function Objects\n\nBuilt-in function objects that are not identified as constructors do not\nimplement the [[Construct]] internal method unless otherwise specified in\nthe description of a particular function.\n\nsec-evaluatenew\n\n...\n7. If IsConstructor(constructor) is false, throw a TypeError exception.\n...\n","includes":["isConstructor.js"],"features":["Reflect.construct","FinalizationRegistry","arrow-function"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/unregister/prop-desc.js","esid":" sec-finalization-registry.prototype.unregister","description":" >Property descriptor of FinalizationRegistry.prototype.unregister\n","info":" |17 ECMAScript Standard Built-in Objects:\n\nEvery other data property described in clauses 18 through 26 and in Annex B.2\nhas the attributes { [[Writable]]: true, [[Enumerable]]: false,\n[[Configurable]]: true } unless otherwise specified.\n","includes":["propertyHelper.js"],"features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/unregister/this-does-not-have-internal-cells-throws.js","esid":" sec-finalization-registry.prototype.unregister","description":" Throws a TypeError if this does not have a [[Cells]] internal slot","info":" |FinalizationRegistry.prototype.unregister ( unregisterToken )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If Type(unregisterToken) is not Object, throw a TypeError exception.\n...\n","features":["WeakSet","WeakMap","FinalizationRegistry","WeakRef"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/unregister/this-not-object-throws.js","esid":" sec-finalization-registry.prototype.unregister","description":" Throws a TypeError if this is not an Object","info":" |FinalizationRegistry.prototype.unregister ( unregisterToken )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If Type(unregisterToken) is not Object, throw a TypeError exception.\n...\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/unregister/unregister-cleaned-up-cell.js","esid":" sec-finalization-registry.prototype.unregister","description":" Cannot unregister a cell that has been cleaned up","info":" |FinalizationRegistry.prototype.cleanupSome ( [ callback ] )\n\n1. Let finalizationRegistry be the this value.\n...\n5. Perform ! CleanupFinalizationRegistry(finalizationRegistry, callback).\n...\n\nCleanupFinalizationRegistry ( finalizationRegistry [ , callback ] )\n\n...\n3. While finalizationRegistry.[[Cells]] contains a Record cell such that cell.[[WeakRefTarget]] is ~empty~, then an implementation may perform the following steps,\na. Choose any such cell.\nb. Remove cell from finalizationRegistry.[[Cells]].\nc. Perform ? Call(callback, undefined, << cell.[[HeldValue]] >>).\n...\n\nFinalizationRegistry.prototype.unregister ( unregisterToken )\n\n1. Let removed be false.\n2. For each Record { [[Target]], [[Holdings]], [[UnregisterToken]] } cell that is an element of finalizationRegistry.[[Cells]], do\na. If SameValue(cell.[[UnregisterToken]], unregisterToken) is true, then\ni. Remove cell from finalizationRegistry.[[Cells]].\nii. Set removed to true.\n3. Return removed.\n","features":["FinalizationRegistry.prototype.cleanupSome","FinalizationRegistry","host-gc-required"],"includes":["async-gc.js"],"flags":["async","non-deterministic"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/unregister/unregister.js","esid":" sec-finalization-registry.prototype.unregister","description":" Return boolean values indicating unregistering of values from given token","info":" |FinalizationRegistry.prototype.unregister ( unregisterToken )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If Type(unregisterToken) is not Object, throw a TypeError exception.\n5. Let removed be false.\n6. For each Record { [[Target]], [[Holdings]], [[UnregisterToken]] } cell that is an element of finalizationRegistry.[[Cells]], do\na. If SameValue(cell.[[UnregisterToken]], unregisterToken) is true, then\ni. Remove cell from finalizationRegistry.[[Cells]].\nii. Set removed to true.\n7. Return removed.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype/unregister/unregisterToken-not-object-throws.js","esid":" sec-finalization-registry.prototype.unregister","description":" Throws a TypeError if unregisterToken is not an Object","info":" |FinalizationRegistry.prototype.unregister ( unregisterToken )\n\n1. Let finalizationRegistry be the this value.\n2. If Type(finalizationRegistry) is not Object, throw a TypeError exception.\n3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a TypeError exception.\n4. If Type(unregisterToken) is not Object, throw a TypeError exception.\n...\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype-from-newtarget-abrupt.js","esid":" sec-finalization-registry-target","description":" >Return abrupt from getting the NewTarget prototype\n","info":" |FinalizationRegistry ( cleanupCallback )\n\n...\n3. Let finalizationRegistry be ? OrdinaryCreateFromConstructor(NewTarget,\"%FinalizationRegistryPrototype%\", « [[Realm]], [[CleanupCallback]], [[Cells]], [[IsFinalizationRegistryCleanupJobActive]] »).\n...\n9. Return finalizationRegistry.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n","features":["FinalizationRegistry","Reflect.construct"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype-from-newtarget-custom.js","esid":" sec-finalization-registry-target","description":" >The [[Prototype]] internal slot is computed from NewTarget.\n","info":" |FinalizationRegistry ( cleanupCallback )\n\n...\n3. Let finalizationRegistry be ? OrdinaryCreateFromConstructor(NewTarget,\"%FinalizationRegistryPrototype%\", « [[Realm]], [[CleanupCallback]], [[Cells]], [[IsFinalizationRegistryCleanupJobActive]] »).\n...\n9. Return finalizationRegistry.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\n5. Return proto.\n","features":["FinalizationRegistry","Reflect.construct"]},{"path":"./test262/test/built-ins/FinalizationRegistry/prototype-from-newtarget.js","esid":" sec-finalization-registry-target","description":" >The [[Prototype]] internal slot is computed from NewTarget.\n","info":" |FinalizationRegistry ( cleanupCallback )\n\n...\n3. Let finalizationRegistry be ? OrdinaryCreateFromConstructor(NewTarget,\"%FinalizationRegistryPrototype%\", « [[Realm]], [[CleanupCallback]], [[Cells]], [[IsFinalizationRegistryCleanupJobActive]] »).\n...\n9. Return finalizationRegistry.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\n5. Return proto.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/returns-new-object-from-constructor.js","esid":" sec-finalization-registry-target","description":" >Returns a new ordinary object from the FinalizationRegistry constructor\n","info":" |FinalizationRegistry ( cleanupCallback )\n\n...\n3. Let finalizationRegistry be ? OrdinaryCreateFromConstructor(NewTarget,\"%FinalizationRegistryPrototype%\", « [[Realm]], [[CleanupCallback]], [[Cells]], [[IsFinalizationRegistryCleanupJobActive]] »).\n...\n9. Return finalizationRegistry.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n","features":["FinalizationRegistry","for-of"]},{"path":"./test262/test/built-ins/FinalizationRegistry/target-not-callable-throws.js","esid":" sec-finalization-registry-target","description":" >Throws a TypeError if target is not callable\n","info":" |FinalizationRegistry ( cleanupCallback )\n\n1. If NewTarget is undefined, throw a TypeError exception.\n2. If IsCallable(cleanupCallback) is false, throw a TypeError exception.\n...\n","features":["FinalizationRegistry","WeakRef"]},{"path":"./test262/test/built-ins/FinalizationRegistry/undefined-newtarget-throws.js","esid":" sec-finalization-registry-target","description":" >Throws a TypeError if NewTarget is undefined.\n","info":" |FinalizationRegistry ( cleanupCallback )\n\n1. If NewTarget is undefined, throw a TypeError exception.\n2. If IsCallable(cleanupCallback) is false, throw a TypeError exception.\n...\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/FinalizationRegistry/unnaffected-by-poisoned-cleanupCallback.js","esid":" sec-finalization-registry-target","description":" >Normal completion even if the cleanupCallback fn is poisoned\n","info":" |FinalizationRegistry ( cleanupCallback )\n\n...\n3. Let finalizationRegistry be ? OrdinaryCreateFromConstructor(NewTarget,\"%FinalizationRegistryPrototype%\", « [[Realm]], [[CleanupCallback]], [[Cells]], [[IsFinalizationRegistryCleanupJobActive]] »).\n...\n9. Return finalizationRegistry.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/cause-property.js","esid":" sec-aggregate-error","description":" >AggregateError constructor creates own cause property\n","info":" |AggregateError ( errors, message[ , options ] )\n\n...\n4. Perform ? InstallErrorCause(O, options).\n...\n\nInstallErrorCause ( O, options )\n\n1. If Type(options) is Object and ? HasProperty(options, \"cause\") is true, then\na. Let cause be ? Get(options, \"cause\").\nb. Perform ! CreateNonEnumerableDataPropertyOrThrow(O, \"cause\", cause).\n...\n\n","features":["AggregateError","error-cause"],"includes":["propertyHelper.js"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/errors-iterabletolist-failures.js","esid":" sec-aggregate-error","description":" >Return abrupt completion from IterableToList(errors)\n","info":" |AggregateError ( errors, message )\n\n...\n3. Let errorsList be ? IterableToList(errors).\n4. Set O.[[AggregateErrors]] to errorsList.\n...\n6. Return O.\n\nRuntime Semantics: IterableToList ( items [ , method ] )\n\n1. If method is present, then\n...\n2. Else,\nb. Let iteratorRecord be ? GetIterator(items, sync).\n3. Let values be a new empty List.\n4. Let next be true.\n5. Repeat, while next is not false\na. Set next to ? IteratorStep(iteratorRecord).\nb. If next is not false, then\ni. Let nextValue be ? IteratorValue(next).\nii. Append nextValue to the end of the List values.\n6. Return values.\n\nGetIterator ( obj [ , hint [ , method ] ] )\n\n...\n3. If method is not present, then\na. If hint is async, then\n...\nb. Otherwise, set method to ? GetMethod(obj, @@iterator).\n4. Let iterator be ? Call(method, obj).\n5. If Type(iterator) is not Object, throw a TypeError exception.\n6. Let nextMethod be ? GetV(iterator, \"next\").\n...\n8. Return iteratorRecord.\n","features":["AggregateError","Symbol.iterator"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/errors-iterabletolist.js","esid":" sec-aggregate-error","description":" >Iteration of errors\n","info":" |AggregateError ( errors, message )\n\n...\n3. Let errorsList be ? IterableToList(errors).\n4. Set O.[[AggregateErrors]] to errorsList.\n...\n6. Return O.\n\nRuntime Semantics: IterableToList ( items [ , method ] )\n\n1. If method is present, then\n...\n2. Else,\nb. Let iteratorRecord be ? GetIterator(items, sync).\n3. Let values be a new empty List.\n4. Let next be true.\n5. Repeat, while next is not false\na. Set next to ? IteratorStep(iteratorRecord).\nb. If next is not false, then\ni. Let nextValue be ? IteratorValue(next).\nii. Append nextValue to the end of the List values.\n6. Return values.\n\nGetIterator ( obj [ , hint [ , method ] ] )\n\n...\n3. If method is not present, then\na. If hint is async, then\n...\nb. Otherwise, set method to ? GetMethod(obj, @@iterator).\n4. Let iterator be ? Call(method, obj).\n5. If Type(iterator) is not Object, throw a TypeError exception.\n6. Let nextMethod be ? GetV(iterator, \"next\").\n...\n8. Return iteratorRecord.\n","features":["AggregateError","Symbol.iterator"],"includes":["compareArray.js"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/is-a-constructor.js","esid":" sec-ecmascript-standard-built-in-objects","description":" >The AggregateError constructor implements [[Construct]]\n","info":" |IsConstructor ( argument )\n\nThe abstract operation IsConstructor takes argument argument (an ECMAScript language value).\nIt determines if argument is a function object with a [[Construct]] internal method.\nIt performs the following steps when called:\n\nIf Type(argument) is not Object, return false.\nIf argument has a [[Construct]] internal method, return true.\nReturn false.\n","includes":["isConstructor.js"],"features":["Reflect.construct","AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/length.js","esid":" sec-aggregate-error","description":" AggregateError.length property descriptor","info":" |AggregateError ( errors, message )\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, has a length\nproperty whose value is an integer. Unless otherwise specified, this\nvalue is equal to the largest number of named arguments shown in the\nsubclause headings for the function description. Optional parameters\n(which are indicated with brackets: [ ]) or rest parameters (which\nare shown using the form «...name») are not included in the default\nargument count.\n\nUnless otherwise specified, the length property of a built-in\nfunction object has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/message-method-prop-cast.js","esid":" sec-aggregate-error","description":" >Cast ToString values of message in the created method property\n","info":" |AggregateError ( errors, message )\n\n...\n5. If message is not undefined, then\na. Let msg be ? ToString(message).\nb. Perform ! CreateMethodProperty(O, \"message\", msg).\n6. Return O.\n\nCreateMethodProperty ( O, P, V )\n\n...\n3. Let newDesc be the PropertyDescriptor { [[Value]]: V, [[Writable]]: true, [[Enumerable]]: false, [[Configurable]]: true }.\n4. Return ? O.[[DefineOwnProperty]](P, newDesc).\n","features":["AggregateError"],"includes":["propertyHelper.js"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/message-method-prop.js","esid":" sec-aggregate-error","description":" >Creates a method property for message\n","info":" |AggregateError ( errors, message )\n\n...\n5. If message is not undefined, then\na. Let msg be ? ToString(message).\nb. Perform ! CreateMethodProperty(O, \"message\", msg).\n6. Return O.\n\nCreateMethodProperty ( O, P, V )\n\n...\n3. Let newDesc be the PropertyDescriptor { [[Value]]: V, [[Writable]]: true, [[Enumerable]]: false, [[Configurable]]: true }.\n4. Return ? O.[[DefineOwnProperty]](P, newDesc).\n","features":["AggregateError"],"includes":["propertyHelper.js"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/message-tostring-abrupt-symbol.js","esid":" sec-aggregate-error","description":" >Abrupt completions of ToString(Symbol message)\n","info":" |AggregateError ( errors, message )\n\n...\n5. If message is not undefined, then\na. Let msg be ? ToString(message).\nb. Perform ! CreateMethodProperty(O, \"message\", msg).\n6. Return O.\n","features":["AggregateError","Symbol","Symbol.toPrimitive"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/message-tostring-abrupt.js","esid":" sec-aggregate-error","description":" >Abrupt completions of ToString(message)\n","info":" |AggregateError ( errors, message )\n\n...\n5. If message is not undefined, then\na. Let msg be ? ToString(message).\nb. Perform ! CreateMethodProperty(O, \"message\", msg).\n6. Return O.\n","features":["AggregateError","Symbol.toPrimitive"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/message-undefined-no-prop.js","esid":" sec-aggregate-error","description":" >If message is undefined, no property will be set to the new instance\n","info":" |AggregateError ( errors, message )\n\n...\n5. If message is not undefined, then\na. Let msg be ? ToString(message).\nb. Perform ! CreateMethodProperty(O, \"message\", msg).\n6. Return O.\n","features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/name.js","esid":" sec-aggregate-error","description":" AggregateError.name property descriptor","info":" |Properties of the AggregateError Constructor\n\n- has a name property whose value is the String value \"AggregateError\".\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, that is not\nidentified as an anonymous function has a name property whose value\nis a String. Unless otherwise specified, this value is the name that\nis given to the function in this specification. For functions that\nare specified as properties of objects, the name value is the\nproperty name string used to access the function. [...]\n\nUnless otherwise specified, the name property of a built-in function\nobject, if it exists, has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/newtarget-is-undefined.js","esid":" sec-aggregate-error","description":" >NewTarget is undefined\n","info":" |AggregateError ( errors, message )\n\n1. If NewTarget is undefined, let newTarget be the active function object, else let newTarget be NewTarget.\n\n","features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/newtarget-proto-custom.js","esid":" sec-aggregate-error","description":" >Use a custom NewTarget prototype\n","info":" |AggregateError ( errors, message )\n\n1. If NewTarget is undefined, let newTarget be the active function object, else let newTarget be NewTarget.\n2. Let O be ? OrdinaryCreateFromConstructor(newTarget, \"%AggregateError.prototype%\", « [[ErrorData]], [[AggregateErrors]] »).\n...\n6. Return O.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n...\n3. Let proto be ? Get(constructor, \"prototype\").\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\nReturn proto.\n","features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/newtarget-proto-fallback.js","esid":" sec-aggregate-error","description":" >Fallback to the NewTarget's [[Prototype]] if the prototype property is not an object\n","info":" |AggregateError ( errors, message )\n\n1. If NewTarget is undefined, let newTarget be the active function object, else let newTarget be NewTarget.\n2. Let O be ? OrdinaryCreateFromConstructor(newTarget, \"%AggregateError.prototype%\", « [[ErrorData]], [[AggregateErrors]] »).\n...\n6. Return O.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n...\n3. Let proto be ? Get(constructor, \"prototype\").\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\nReturn proto.\n","features":["AggregateError","Symbol"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/newtarget-proto.js","esid":" sec-aggregate-error","description":" >Default prototype is the %AggregateError.prototype%\"\n","info":" |AggregateError ( errors, message )\n\n1. If NewTarget is undefined, let newTarget be the active function object, else let newTarget be NewTarget.\n2. Let O be ? OrdinaryCreateFromConstructor(newTarget, \"%AggregateError.prototype%\", « [[ErrorData]], [[AggregateErrors]] »).\n...\n6. Return O.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n...\n3. Let proto be ? Get(constructor, \"prototype\").\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\nReturn proto.\n","features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/order-of-args-evaluation.js","esid":" sec-aggregate-error","description":" >Process arguments in superclass-then-subclass order\n","info":" |AggregateError ( errors, message )\n\nTODO: get updated prose\n\n","features":["AggregateError","Symbol.iterator"],"includes":["promiseHelper.js"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/prop-desc.js","esid":" sec-aggregate-error","description":" >Property descriptor of AggregateError\n","info":" |The AggregateError Object\n\nECMAScript Standard Built-in Objects:\n\nEvery other data property described in clauses 18 through 26 and in Annex B.2\nhas the attributes { [[Writable]]: true, [[Enumerable]]: false,\n[[Configurable]]: true } unless otherwise specified.\n","includes":["propertyHelper.js"],"features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/proto-from-ctor-realm.js","esid":" sec-aggregate-error","description":" Default [[Prototype]] value derived from realm of the NewTarget.","info":" |AggregateError ( errors, message )\n\n1. If NewTarget is undefined, let newTarget be the active function object, else let newTarget be NewTarget.\n2. Let O be ? OrdinaryCreateFromConstructor(newTarget, \"%AggregateError.prototype%\", « [[ErrorData]], [[AggregateErrors]] »).\n...\n6. Return O.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n...\n3. Let proto be ? Get(constructor, 'prototype').\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\n5. Return proto.\n","features":["AggregateError","cross-realm","Reflect","Symbol"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/proto.js","description":" The prototype of AggregateError constructor is Error","esid":" sec-aggregate-error","info":" |Properties of the AggregateError Constructor\n\n- has a [[Prototype]] internal slot whose value is the intrinsic object %Error%.\n","features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/prototype/constructor.js","esid":" sec-aggregate-error.prototype.constructor","description":" >The `AggregateError.prototype.constructor` property descriptor.\n","info":" |The initial value of AggregateError.prototype.constructor is the intrinsic\nobject %AggregateError%.\n\n17 ECMAScript Standard Built-in Objects:\n\nEvery other data property described (...) has the attributes { [[Writable]]: true,\n[[Enumerable]]: false, [[Configurable]]: true } unless otherwise specified.\n","includes":["propertyHelper.js"],"features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/prototype/errors-absent-on-prototype.js","esid":" sec-properties-of-the-aggregate-error-prototype-objects","description":" >The AggregateError prototype object isn't an AggregateError instance.\n","info":" |Properties of the AggregateError Prototype Object\n\nThe AggregateError prototype object:\n...\n- is not an Error instance or an AggregateError instance and does not have an\n[[ErrorData]] internal slot.\n...\n","features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/prototype/message.js","esid":" sec-aggregate-error.prototype.message","description":" >The `AggregateError.prototype.message` property descriptor.\n","info":" |The initial value of the message property of the prototype for a given AggregateError\nconstructor is the empty String.\n\n17 ECMAScript Standard Built-in Objects:\n\nEvery other data property described (...) has the attributes { [[Writable]]: true,\n[[Enumerable]]: false, [[Configurable]]: true } unless otherwise specified.\n","includes":["propertyHelper.js"],"features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/prototype/name.js","esid":" sec-aggregate-error.prototype.name","description":" >The `AggregateError.prototype.name` property descriptor.\n","info":" |The initial value of AggregateError.prototype.name is \"AggregateError\".\n\n17 ECMAScript Standard Built-in Objects:\n\nEvery other data property described (...) has the attributes { [[Writable]]: true,\n[[Enumerable]]: false, [[Configurable]]: true } unless otherwise specified.\n","includes":["propertyHelper.js"],"features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/prototype/prop-desc.js","esid":" sec-aggregate-error.prototype","description":" >Property descriptor of AggregateError.prototype\n","info":" |AggregateError.prototype\n\nThe initial value of AggregateError.prototype is the intrinsic object %AggregateErrorPrototype%.\n\nThis property has the attributes { [[Writable]]: false, [[Enumerable]]: false, [[Configurable]]: false }.\n","includes":["propertyHelper.js"],"features":["AggregateError"]},{"path":"./test262/test/built-ins/NativeErrors/AggregateError/prototype/proto.js","esid":" sec-properties-of-the-aggregate-error-prototype-objects","description":" The prototype of AggregateError.prototype constructor is Error.prototype","info":" |Properties of the AggregateError Prototype Object\n\n- has a [[Prototype]] internal slot whose value is the intrinsic object %Error.prototype%.\n","features":["AggregateError"]},{"path":"./test262/test/built-ins/Object/seal/seal-aggregateerror.js","esid":" sec-object.seal","description":" >Object.seal AggregateError\n","info":" |If Type(O) is not Object, return O.\nLet status be ? SetIntegrityLevel(O, sealed).\n\nSetIntegrityLevel ( O, level )\n\nAssert: Type(O) is Object.\nAssert: level is either sealed or frozen.\nLet status be ? O.[[PreventExtensions]]().\nIf status is false, return false.\nLet keys be ? O.[[OwnPropertyKeys]]().\nIf level is sealed, then\nFor each element k of keys, do\nPerform ? DefinePropertyOrThrow(O, k, PropertyDescriptor { [[Configurable]]: false }).\nElse,\nAssert: level is frozen.\nFor each element k of keys, do\nLet currentDesc be ? O.[[GetOwnProperty]](k).\nIf currentDesc is not undefined, then\nIf IsAccessorDescriptor(currentDesc) is true, then\nLet desc be the PropertyDescriptor { [[Configurable]]: false }.\nElse,\nLet desc be the PropertyDescriptor { [[Configurable]]: false, [[Writable]]: false }.\nPerform ? DefinePropertyOrThrow(O, k, desc).\nReturn true.\n\n","features":["AggregateError"]},{"path":"./test262/test/built-ins/Object/seal/seal-finalizationregistry.js","esid":" sec-object.seal","description":" >Object.seal FinalizationRegistry\n","info":" |If Type(O) is not Object, return O.\nLet status be ? SetIntegrityLevel(O, sealed).\n\nSetIntegrityLevel ( O, level )\n\nAssert: Type(O) is Object.\nAssert: level is either sealed or frozen.\nLet status be ? O.[[PreventExtensions]]().\nIf status is false, return false.\nLet keys be ? O.[[OwnPropertyKeys]]().\nIf level is sealed, then\nFor each element k of keys, do\nPerform ? DefinePropertyOrThrow(O, k, PropertyDescriptor { [[Configurable]]: false }).\nElse,\nAssert: level is frozen.\nFor each element k of keys, do\nLet currentDesc be ? O.[[GetOwnProperty]](k).\nIf currentDesc is not undefined, then\nIf IsAccessorDescriptor(currentDesc) is true, then\nLet desc be the PropertyDescriptor { [[Configurable]]: false }.\nElse,\nLet desc be the PropertyDescriptor { [[Configurable]]: false, [[Writable]]: false }.\nPerform ? DefinePropertyOrThrow(O, k, desc).\nReturn true.\n","features":["FinalizationRegistry"]},{"path":"./test262/test/built-ins/Object/seal/seal-weakref.js","esid":" sec-object.seal","description":" >Object.seal WeakRef\n","info":" |If Type(O) is not Object, return O.\nLet status be ? SetIntegrityLevel(O, sealed).\n\nSetIntegrityLevel ( O, level )\n\nAssert: Type(O) is Object.\nAssert: level is either sealed or frozen.\nLet status be ? O.[[PreventExtensions]]().\nIf status is false, return false.\nLet keys be ? O.[[OwnPropertyKeys]]().\nIf level is sealed, then\nFor each element k of keys, do\nPerform ? DefinePropertyOrThrow(O, k, PropertyDescriptor { [[Configurable]]: false }).\nElse,\nAssert: level is frozen.\nFor each element k of keys, do\nLet currentDesc be ? O.[[GetOwnProperty]](k).\nIf currentDesc is not undefined, then\nIf IsAccessorDescriptor(currentDesc) is true, then\nLet desc be the PropertyDescriptor { [[Configurable]]: false }.\nElse,\nLet desc be the PropertyDescriptor { [[Configurable]]: false, [[Writable]]: false }.\nPerform ? DefinePropertyOrThrow(O, k, desc).\nReturn true.\n","features":["WeakRef"]},{"path":"./test262/test/built-ins/Promise/any/iter-arg-is-empty-iterable-reject.js","esid":" sec-promise.any","description":" >Promise.any([]) rejects with AggregateError, empty errors array.\n","info":" |Runtime Semantics: PerformPromiseAny ( iteratorRecord, constructor, resultCapability )\n\n...\n3. Let errors be a new empty List.\n...\n8. Repeat,\na. Let next be IteratorStep(iteratorRecord).\nb. If next is an abrupt completion, set iteratorRecord.[[Done]] to true.\nc. ReturnIfAbrupt(next).\nd. If next is false, then\ni. Set iteratorRecord.[[Done]] to true.\nii. Set remainingElementsCount.[[Value]] to remainingElementsCount.[[Value]] - 1.\niii. If remainingElementsCount.[[Value]] is 0, then\n1. Let error be a newly created AggregateError object.\n2. Set error.[[AggregateErrors]] to errors.\n3. Return ThrowCompletion(error).\n...\n\n","flags":["async"],"features":["AggregateError","Promise.any","arrow-function"]},{"path":"./test262/test/built-ins/Promise/any/iter-arg-is-empty-string-reject.js","esid":" sec-promise.any","description":" >Promise.any('') rejects with AggregateError, empty errors array.\n","info":" |Runtime Semantics: PerformPromiseAny ( iteratorRecord, constructor, resultCapability )\n\n...\n3. Let errors be a new empty List.\n...\n8. Repeat,\na. Let next be IteratorStep(iteratorRecord).\nb. If next is an abrupt completion, set iteratorRecord.[[Done]] to true.\nc. ReturnIfAbrupt(next).\nd. If next is false, then\ni. Set iteratorRecord.[[Done]] to true.\nii. Set remainingElementsCount.[[Value]] to remainingElementsCount.[[Value]] - 1.\niii. If remainingElementsCount.[[Value]] is 0, then\n1. Let error be a newly created AggregateError object.\n2. Set error.[[AggregateErrors]] to errors.\n3. Return ThrowCompletion(error).\n...\n\n","features":["AggregateError","Promise.any","arrow-function"],"flags":["async"]},{"path":"./test262/test/built-ins/Promise/any/reject-deferred.js","esid":" sec-promise.any","description":" Rejecting through deferred invocation of the provided resolving function","info":" |...\n5. Let result be PerformPromiseAny(iteratorRecord, C, promiseCapability).\n...\n\n\n","flags":["async"],"features":["AggregateError","Promise.any","arrow-function"]},{"path":"./test262/test/built-ins/Promise/any/reject-immed.js","esid":" sec-promise.any","description":" Rejecting through immediate invocation of the provided resolving function","info":" |...\nLet promiseCapability be NewPromiseCapability(C).\n...\nLet result be PerformPromiseAny(iteratorRecord, promiseCapability, C).\n...\n\nRuntime Semantics: PerformPromiseAny\n...\n8. Repeat\n...\nr. Perform ? Invoke(nextPromise, \"then\",\n« resultCapability.[[Resolve]], rejectElement »).\n\n\nPromise.any Reject Element Functions\n...\n6. Return RejectPromise(promise, reason).\n","flags":["async"],"features":["Promise.any","arrow-function"]},{"path":"./test262/test/built-ins/Promise/any/resolve-before-loop-exit-from-same.js","esid":" sec-promise.any","description":" >Cannot tamper remainingElementsCount when Promise.all resolve element function is called twice in a row.\n","info":" |Let result be PerformPromiseAny(iteratorRecord, C, promiseCapability).\n\nRuntime Semantics: PerformPromiseAny\n\n...\nLet remainingElementsCount be a new Record { [[value]]: 1 }.\n...\n8.d ...\nii. Set remainingElementsCount.[[value]] to remainingElementsCount.[[value]] − 1.\niii. If remainingElementsCount.[[value]] is 0,\n1. Let error be a newly created AggregateError object.\n2. Perform ! DefinePropertyOrThrow(error, \"errors\", Property Descriptor { [[Configurable]]: true, [[Enumerable]]: false, [[Writable]]: true, [[Value]]: errors }).\n3. Return ThrowCompletion(error).\n...\n\nPromise.any Reject Element Functions\n...\nLet alreadyCalled be the value of F's [[AlreadyCalled]] internal slot.\nIf alreadyCalled.[[value]] is true, return undefined.\nSet alreadyCalled.[[value]] to true.\n...\n\n","features":["Promise.any","arrow-function"]},{"path":"./test262/test/built-ins/Promise/any/resolve-before-loop-exit.js","esid":" sec-promise.any","description":" >Cannot tamper remainingElementsCount when two Promise.any Reject Element Function are called in succession.\n","info":" |Let result be PerformPromiseAny(iteratorRecord, C, promiseCapability).\n\nRuntime Semantics: PerformPromiseAny\n\n...\nLet remainingElementsCount be a new Record { [[value]]: 1 }.\n...\n8.d ...\nii. Set remainingElementsCount.[[value]] to remainingElementsCount.[[value]] − 1.\niii. If remainingElementsCount.[[value]] is 0,\n1. Let error be a newly created AggregateError object.\n2. Perform ! DefinePropertyOrThrow(error, \"errors\", Property Descriptor { [[Configurable]]: true, [[Enumerable]]: false, [[Writable]]: true, [[Value]]: errors }).\n3. Return ThrowCompletion(error).\n...\n\nPromise.any Reject Element Functions\n...\nLet alreadyCalled be the value of F's [[AlreadyCalled]] internal slot.\nIf alreadyCalled.[[value]] is true, return undefined.\nSet alreadyCalled.[[value]] to true.\n...\n\n","features":["Promise.any","arrow-function"]},{"path":"./test262/test/built-ins/Promise/any/resolved-sequence-with-rejections.js","esid":" sec-promise.any","description":" Resolution ticks are set in a predictable sequence","info":" |Runtime Semantics: PerformPromiseAny ( iteratorRecord, constructor, resultCapability )\n\nLet remainingElementsCount be a new Record { [[Value]]: 1 }.\n...\n\nSet remainingElementsCount.[[Value]] to remainingElementsCount.[[Value]] - 1.\nIf remainingElementsCount.[[Value]] is 0, then\nLet error be a newly created AggregateError object.\nPerform ! DefinePropertyOrThrow(error, \"errors\",\nProperty Descriptor {\n[[Configurable]]: true,\n[[Enumerable]]: false,\n[[Writable]]: true,\n[[Value]]: errors\n}).\nReturn ? Call(promiseCapability.[[Reject]], undefined, « error »).\n...\n","flags":["async"],"includes":["promiseHelper.js"],"features":["Promise.any"]},{"path":"./test262/test/built-ins/ShadowRealm/prototype/evaluate/globalthis-available-properties.js","esid":" sec-shadowrealm.prototype.evaluate","description":" >The ShadowRealm global must include ECMAScript global properties\n","info":" |ShadowRealm ( )\n\n...\n3. Let realmRec be CreateRealm().\n4. Set O.[[ShadowRealm]] to realmRec.\n...\n10. Perform ? SetRealmGlobalObject(realmRec, undefined, undefined).\n11. Perform ? SetDefaultGlobalBindings(O.[[ShadowRealm]]).\n12. Perform ? HostInitializeShadowRealm(O.[[ShadowRealm]]).\n\nSetDefaultGlobalBindings ( realmRec )\n\n1. Let global be realmRec.[[GlobalObject]].\n2. For each property of the Global Object specified in clause 19, do\na. Let name be the String value of the property name.\nb. Let desc be the fully populated data Property Descriptor for the property, containing the specified attributes for the property. For properties listed in 19.2, 19.3, or 19.4 the value of the [[Value]] attribute is the corresponding intrinsic object from realmRec.\nc. Perform ? DefinePropertyOrThrow(global, name, desc).\n3. Return global.\n","features":["ShadowRealm"],"includes":["compareArray.js"]},{"path":"./test262/test/built-ins/String/prototype/at/index-argument-tointeger.js","esid":" sec-string.prototype.at","description":" >Property type and descriptor.\n","info":" |String.prototype.at( index )\n\nLet relativeIndex be ? ToInteger(index).\n\n","features":["String.prototype.at"]},{"path":"./test262/test/built-ins/String/prototype/at/index-non-numeric-argument-tointeger-invalid.js","esid":" sec-string.prototype.at","description":" >Property type and descriptor.\n","info":" |String.prototype.at( index )\n\nLet relativeIndex be ? ToInteger(index).\n\n","features":["String.prototype.at"]},{"path":"./test262/test/built-ins/String/prototype/at/index-non-numeric-argument-tointeger.js","esid":" sec-string.prototype.at","description":" >Property type and descriptor.\n","info":" |String.prototype.at( index )\n\nLet relativeIndex be ? ToInteger(index).\n\n","features":["String.prototype.at"]},{"path":"./test262/test/built-ins/String/prototype/at/length.js","esid":" sec-string.prototype.at","description":" >String.prototype.at.length value and descriptor.\n","info":" |String.prototype.at( index )\n\n17 ECMAScript Standard Built-in Objects\n\n","includes":["propertyHelper.js"],"features":["String.prototype.at"]},{"path":"./test262/test/built-ins/String/prototype/at/name.js","esid":" sec-string.prototype.at","description":" >String.prototype.at.name value and descriptor.\n","info":" |String.prototype.at( index )\n\n17 ECMAScript Standard Built-in Objects\n\n","includes":["propertyHelper.js"],"features":["String.prototype.at"]},{"path":"./test262/test/built-ins/String/prototype/at/prop-desc.js","esid":" sec-string.prototype.at","description":" >Property type and descriptor.\n","info":" |String.prototype.at( index )\n\n17 ECMAScript Standard Built-in Objects\n","includes":["propertyHelper.js"],"features":["String.prototype.at"]},{"path":"./test262/test/built-ins/String/prototype/at/return-abrupt-from-this.js","esid":" sec-string.prototype.at","description":" >Return abrupt from RequireObjectCoercible(this value).\n","info":" |String.prototype.at( index )\n\nLet O be ? RequireObjectCoercible(this value).\n\n","features":["String.prototype.at"]},{"path":"./test262/test/built-ins/String/prototype/at/returns-code-unit.js","esid":" sec-String.prototype.at","description":" >The method should return an Iterator instance.\n","info":" |String.prototype.at ( )\n\nLet O be ? ToObject(this value).\nLet len be ? LengthOfStringLike(O).\nLet relativeIndex be ? ToInteger(index).\nIf relativeIndex ≥ 0, then\nLet k be relativeIndex.\nElse,\nLet k be len + relativeIndex.\nIf k < 0 or k ≥ len, then return undefined.\nReturn ? Get(O, ! ToString(k)).\n\n","features":["String.prototype.at"]},{"path":"./test262/test/built-ins/String/prototype/at/returns-item-relative-index.js","esid":" sec-String.prototype.at","description":" >Returns the item value at the specified relative index\n","info":" |String.prototype.at ( )\n\nLet O be ? ToObject(this value).\nLet len be ? LengthOfStringLike(O).\nLet relativeIndex be ? ToInteger(index).\nIf relativeIndex ≥ 0, then\nLet k be relativeIndex.\nElse,\nLet k be len + relativeIndex.\nIf k < 0 or k ≥ len, then return undefined.\nReturn ? Get(O, ! ToString(k)).\n\n","features":["String.prototype.at"]},{"path":"./test262/test/built-ins/String/prototype/at/returns-item.js","esid":" sec-String.prototype.at","description":" >Returns the item value at the specified index\n","info":" |String.prototype.at ( )\n\nLet O be ? ToObject(this value).\nLet len be ? LengthOfStringLike(O).\nLet relativeIndex be ? ToInteger(index).\nIf relativeIndex ≥ 0, then\nLet k be relativeIndex.\nElse,\nLet k be len + relativeIndex.\nIf k < 0 or k ≥ len, then return undefined.\nReturn ? Get(O, ! ToString(k)).\n\n","features":["String.prototype.at"]},{"path":"./test262/test/built-ins/String/prototype/at/returns-undefined-for-out-of-range-index.js","esid":" sec-string.prototype.at","description":" >Creates an iterator from a custom object.\n","info":" |String.prototype.at( index )\n\nIf k < 0 or k ≥ len, then return undefined.\n","features":["String.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/BigInt/return-abrupt-from-this-out-of-bounds.js","esid":" sec-%typedarray%.prototype.at","description":" Return abrupt when \"this\" value fails buffer boundary checks","includes":["testBigIntTypedArray.js"],"features":["ArrayBuffer","BigInt","TypedArray","TypedArray.prototype.at","arrow-function","resizable-arraybuffer"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/index-argument-tointeger.js","esid":" sec-%typedarray%.prototype.at","description":" >Property type and descriptor.\n","info":" |%TypedArray%.prototype.at( index )\n\nLet relativeIndex be ? ToInteger(index).\n\n","includes":["testTypedArray.js"],"features":["TypedArray","TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/index-non-numeric-argument-tointeger-invalid.js","esid":" sec-%typedarray%.prototype.at","description":" >Property type and descriptor.\n","info":" |%TypedArray%.prototype.at( index )\n\nLet relativeIndex be ? ToInteger(index).\n\n","includes":["testTypedArray.js"],"features":["TypedArray","TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/index-non-numeric-argument-tointeger.js","esid":" sec-%typedarray%.prototype.at","description":" >Property type and descriptor.\n","info":" |%TypedArray%.prototype.at( index )\n\nLet relativeIndex be ? ToInteger(index).\n\n","includes":["testTypedArray.js"],"features":["TypedArray","TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/length.js","esid":" sec-%typedarray%.prototype.at","description":" >TypedArray.prototype.at.length value and descriptor.\n","info":" |%TypedArray%.prototype.at( index )\n\n17 ECMAScript Standard Built-in Objects\n\n","includes":["propertyHelper.js","testTypedArray.js"],"features":["TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/name.js","esid":" sec-%typedarray%.prototype.at","description":" >%TypedArray%.prototype.at.name value and descriptor.\n","info":" |%TypedArray%.prototype.at( index )\n\n17 ECMAScript Standard Built-in Objects\n\n","includes":["propertyHelper.js","testTypedArray.js"],"features":["TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/prop-desc.js","esid":" sec-%typedarray%.prototype.at","description":" >Property type and descriptor.\n","info":" |%TypedArray%.prototype.at( index )\n\n17 ECMAScript Standard Built-in Objects\n","includes":["propertyHelper.js","testTypedArray.js"],"features":["TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/return-abrupt-from-this-out-of-bounds.js","esid":" sec-%typedarray%.prototype.at","description":" Return abrupt when \"this\" value fails buffer boundary checks","includes":["testTypedArray.js"],"features":["TypedArray","TypedArray.prototype.at","resizable-arraybuffer"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/return-abrupt-from-this.js","esid":" sec-%typedarray%.prototype.at","description":" >Return abrupt from ToObject(this value).\n","info":" |%TypedArray%.prototype.at( index )\n\nLet O be the this value.\nPerform ? ValidateTypedArray(O).\n\n","includes":["testTypedArray.js"],"features":["TypedArray,TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/returns-item-relative-index.js","esid":" sec-%typedarray%.prototype.at","description":" >Returns the item value at the specified relative index\n","info":" |%TypedArray%.prototype.at( index )\n\nLet O be the this value.\nPerform ? ValidateTypedArray(O).\nLet len be O.[[ArrayLength]].\nLet relativeIndex be ? ToInteger(index).\nIf relativeIndex ≥ 0, then\nLet k be relativeIndex.\nElse,\nLet k be len + relativeIndex.\nIf k < 0 or k ≥ len, then return undefined.\nReturn ? Get(O, ! ToString(k)).\n\n","includes":["testTypedArray.js"],"features":["TypedArray,TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/returns-item.js","esid":" sec-%typedarray%.prototype.at","description":" >Returns the item value at the specified index\n","info":" |%TypedArray%.prototype.at( index )\n\nLet O be the this value.\nPerform ? ValidateTypedArray(O).\nLet len be O.[[ArrayLength]].\nLet relativeIndex be ? ToInteger(index).\nIf relativeIndex ≥ 0, then\nLet k be relativeIndex.\nElse,\nLet k be len + relativeIndex.\nIf k < 0 or k ≥ len, then return undefined.\nReturn ? Get(O, ! ToString(k)).\n\n","includes":["testTypedArray.js"],"features":["TypedArray,TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/returns-undefined-for-holes-in-sparse-arrays.js","esid":" sec-%typedarray%.prototype.at","description":" >Returns the item value at the specified index, holes are filled in sparse arrays.\n","info":" |%TypedArray%.prototype.at( index )\n\nLet O be the this value.\nPerform ? ValidateTypedArray(O).\nLet len be O.[[ArrayLength]].\nLet relativeIndex be ? ToInteger(index).\nIf relativeIndex ≥ 0, then\nLet k be relativeIndex.\nElse,\nLet k be len + relativeIndex.\nIf k < 0 or k ≥ len, then return undefined.\nReturn ? Get(O, ! ToString(k)).\n\n","includes":["testTypedArray.js"],"features":["TypedArray","TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/TypedArray/prototype/at/returns-undefined-for-out-of-range-index.js","esid":" sec-%typedarray%.prototype.at","description":" >Returns undefined if the specified index less than or greater than the available index range.\n","info":" |%TypedArray%.prototype.at( index )\n\nIf k < 0 or k ≥ len, then return undefined.\n\n","includes":["testTypedArray.js"],"features":["TypedArray,TypedArray.prototype.at"]},{"path":"./test262/test/built-ins/WeakRef/constructor.js","esid":" sec-weak-ref-constructor","description":" >The WeakRef constructor is the %WeakRef% intrinsic object and the initial\nvalue of the WeakRef property of the global object.\n","features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/instance-extensible.js","esid":" sec-weak-ref-target","description":" Instances of WeakRef are extensible","info":" |WeakRef( target )\n\n...\n3. Let weakRef be ? OrdinaryCreateFromConstructor(NewTarget,\"%WeakRefPrototype%\", « [[Target]] »).\n4. Perfom ! KeepDuringJob(target).\n5. Set weakRef.[[Target]] to target.\n6. Return weakRef.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nObjectCreate ( proto [ , internalSlotsList ] )\n\n4. Set obj.[[Prototype]] to proto.\n5. Set obj.[[Extensible]] to true.\n6. Return obj.\n","features":["WeakRef","Reflect"]},{"path":"./test262/test/built-ins/WeakRef/is-a-constructor.js","esid":" sec-ecmascript-standard-built-in-objects","description":" >The WeakRef constructor implements [[Construct]]\n","info":" |IsConstructor ( argument )\n\nThe abstract operation IsConstructor takes argument argument (an ECMAScript language value).\nIt determines if argument is a function object with a [[Construct]] internal method.\nIt performs the following steps when called:\n\nIf Type(argument) is not Object, return false.\nIf argument has a [[Construct]] internal method, return true.\nReturn false.\n","includes":["isConstructor.js"],"features":["Reflect.construct","WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/length.js","esid":" sec-weak-ref-target","description":" WeakRef.length property descriptor","info":" |WeakRef ( target )\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, has a length\nproperty whose value is an integer. Unless otherwise specified, this\nvalue is equal to the largest number of named arguments shown in the\nsubclause headings for the function description. Optional parameters\n(which are indicated with brackets: [ ]) or rest parameters (which\nare shown using the form «...name») are not included in the default\nargument count.\n\nUnless otherwise specified, the length property of a built-in\nfunction object has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/name.js","esid":" sec-weak-ref-target","description":" WeakRef.name property descriptor","info":" |WeakRef ( value )\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, that is not\nidentified as an anonymous function has a name property whose value\nis a String. Unless otherwise specified, this value is the name that\nis given to the function in this specification. For functions that\nare specified as properties of objects, the name value is the\nproperty name string used to access the function. [...]\n\nUnless otherwise specified, the name property of a built-in function\nobject, if it exists, has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/newtarget-prototype-is-not-object.js","esid":" sec-weak-ref-target","description":" >[[Prototype]] defaults to %WeakRefPrototype% if NewTarget.prototype is not an object.\n","info":" |WeakRef( target )\n\n...\n3. Let weakRef be ? OrdinaryCreateFromConstructor(NewTarget,\"%WeakRefPrototype%\", « [[Target]] »).\n4. Perfom ! KeepDuringJob(target).\n5. Set weakRef.[[Target]] to target.\n6. Return weakRef.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\n5. Return proto.\n","features":["WeakRef","Reflect.construct","Symbol"]},{"path":"./test262/test/built-ins/WeakRef/prop-desc.js","esid":" sec-weak-ref-constructor","description":" >Property descriptor of WeakRef\n","info":" |17 ECMAScript Standard Built-in Objects:\n\nEvery other data property described in clauses 18 through 26 and in Annex B.2\nhas the attributes { [[Writable]]: true, [[Enumerable]]: false,\n[[Configurable]]: true } unless otherwise specified.\n","includes":["propertyHelper.js"],"features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/proto-from-ctor-realm.js","esid":" sec-weak-ref-target","description":" Default [[Prototype]] value derived from realm of the newTarget","info":" |WeakRef( target )\n\n...\n3. Let weakRef be ? OrdinaryCreateFromConstructor(NewTarget,'%WeakRefPrototype%', « [[Target]] »).\n4. Perfom ! KeepDuringJob(target).\n5. Set weakRef.[[Target]] to target.\n6. Return weakRef.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\n5. Return proto.\n","features":["WeakRef","cross-realm","Reflect","Symbol"]},{"path":"./test262/test/built-ins/WeakRef/proto.js","esid":" sec-properties-of-the-weak-ref-constructor","description":" >The prototype of WeakRef is Object.prototype\n","info":" |The value of the [[Prototype]] internal slot of the WeakRef object is the\nintrinsic object %FunctionPrototype%.\n","features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/prototype/Symbol.toStringTag.js","esid":" sec-weak-ref-@@tostringtag","description":" >`Symbol.toStringTag` property descriptor\n","info":" |The initial value of the @@toStringTag property is the String value\n'WeakRef'.\n\nThis property has the attributes { [[Writable]]: false, [[Enumerable]]:\nfalse, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["WeakRef","Symbol","Symbol.toStringTag"]},{"path":"./test262/test/built-ins/WeakRef/prototype/constructor.js","esid":" sec-properties-of-the-weak-ref-prototype-object","description":" WeakRef.prototype.constructor","info":" |WeakRef.prototype.constructor\n\nNormative Optional\n\nThe initial value of WeakRef.prototype.constructor is the intrinsic object %WeakRef%.\n\nThis property has the attributes { [[Writable]]: false, [[Enumerable]]: false, [[Configurable]]: true }.\n\nThis section is to be treated identically to the \"Annex B\" of ECMA-262, but to be written in-line with the main specification.\n","includes":["propertyHelper.js"],"features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/prototype/deref/custom-this.js","esid":" sec-weak-ref.prototype.deref","description":" Return target if weakRef.[[Target]] is not empty (applying custom this)","info":" |WeakRef.prototype.deref ()\n\n1. Let weakRef be the this value.\n...\n4. Let target be the value of weakRef.[[Target]].\n5. If target is not empty,\na. Perform ! KeepDuringJob(target).\nb. Return target.\n6. Return undefined.\n","features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/prototype/deref/gc-cleanup-not-prevented-with-wr-deref.js","esid":" sec-weak-ref.prototype.deref","description":" WeakRef deref should not prevent a GC event","info":" |WeakRef.prototype.deref ( )\n\n...\n4. Let target be the value of weakRef.[[Target]].\n5. If target is not empty,\na. Perform ! KeepDuringJob(target).\nb. Return target.\n6. Return undefined.\n","features":["FinalizationRegistry.prototype.cleanupSome","WeakRef","host-gc-required"],"includes":["async-gc.js"],"flags":["async","non-deterministic"]},{"path":"./test262/test/built-ins/WeakRef/prototype/deref/length.js","esid":" sec-weak-ref.prototype.deref","description":" WeakRef.prototype.deref.length property descriptor","info":" |WeakRef.prototype.deref ()\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, has a length\nproperty whose value is an integer. Unless otherwise specified, this\nvalue is equal to the largest number of named arguments shown in the\nsubclause headings for the function description. Optional parameters\n(which are indicated with brackets: [ ]) or rest parameters (which\nare shown using the form «...name») are not included in the default\nargument count.\n\nUnless otherwise specified, the length property of a built-in\nfunction object has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/prototype/deref/name.js","esid":" sec-weak-ref.prototype.deref","description":" WeakRef.prototype.deref.name property descriptor","info":" |WeakRef.prototype.deref.name value and property descriptor\n\n17 ECMAScript Standard Built-in Objects\n\nEvery built-in function object, including constructors, that is not\nidentified as an anonymous function has a name property whose value\nis a String. Unless otherwise specified, this value is the name that\nis given to the function in this specification. For functions that\nare specified as properties of objects, the name value is the\nproperty name string used to access the function. [...]\n\nUnless otherwise specified, the name property of a built-in function\nobject, if it exists, has the attributes { [[Writable]]: false,\n[[Enumerable]]: false, [[Configurable]]: true }.\n","includes":["propertyHelper.js"],"features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/prototype/deref/not-a-constructor.js","esid":" sec-ecmascript-standard-built-in-objects","description":" >WeakRef.prototype.deref does not implement [[Construct]], is not new-able\n","info":" |ECMAScript Function Objects\n\nBuilt-in function objects that are not identified as constructors do not\nimplement the [[Construct]] internal method unless otherwise specified in\nthe description of a particular function.\n\nsec-evaluatenew\n\n...\n7. If IsConstructor(constructor) is false, throw a TypeError exception.\n...\n","includes":["isConstructor.js"],"features":["Reflect.construct","WeakRef","arrow-function"]},{"path":"./test262/test/built-ins/WeakRef/prototype/deref/prop-desc.js","esid":" sec-weak-ref.prototype.deref","description":" >Property descriptor of WeakRef.prototype.deref\n","info":" |17 ECMAScript Standard Built-in Objects:\n\nEvery other data property described in clauses 18 through 26 and in Annex B.2\nhas the attributes { [[Writable]]: true, [[Enumerable]]: false,\n[[Configurable]]: true } unless otherwise specified.\n","includes":["propertyHelper.js"],"features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/prototype/deref/return-target.js","esid":" sec-weak-ref.prototype.deref","description":" Return target if weakRef.[[Target]] is not empty","info":" |WeakRef.prototype.deref ()\n\n...\n4. Let target be the value of weakRef.[[Target]].\n5. If target is not empty,\na. Perform ! KeepDuringJob(target).\nb. Return target.\n6. Return undefined.\n","features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/prototype/deref/this-does-not-have-internal-target-throws.js","esid":" sec-weak-ref.prototype.deref","description":" Throws a TypeError if this does not have a [[Target]] internal slot","info":" |WeakRef.prototype.deref ()\n\n1. Let weakRef be the this value.\n2. If Type(weakRef) is not Object, throw a TypeError exception.\n3. If weakRef does not have a [[Target]] internal slot, throw a TypeError exception.\n4. Let target be the value of weakRef.[[Target]].\n5. If target is not empty,\na. Perform ! KeepDuringJob(target).\nb. Return target.\n6. Return undefined.\n","features":["WeakSet","WeakMap","WeakRef","FinalizationRegistry"]},{"path":"./test262/test/built-ins/WeakRef/prototype/deref/this-not-object-throws.js","esid":" sec-weak-ref.prototype.deref","description":" Throws a TypeError if this is not an Object","info":" |WeakRef.prototype.deref ()\n\n1. Let weakRef be the this value.\n2. If Type(weakRef) is not Object, throw a TypeError exception.\n3. If weakRef does not have a [[Target]] internal slot, throw a TypeError exception.\n4. Let target be the value of weakRef.[[Target]].\n5. If target is not empty,\na. Perform ! KeepDuringJob(target).\nb. Return target.\n6. Return undefined.\n","features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/prototype/prop-desc.js","description":" The property descriptor WeakRef.prototype","esid":" sec-weak-ref.prototype","info":" |This property has the attributes { [[Writable]]: false, [[Enumerable]]: false,\n[[Configurable]]: false }.\n","features":["WeakRef"],"includes":["propertyHelper.js"]},{"path":"./test262/test/built-ins/WeakRef/prototype/proto.js","description":" The prototype of WeakRef.prototype is Object.prototype","esid":" sec-properties-of-the-weak-ref-prototype-object","info":" |The value of the [[Prototype]] internal slot of the WeakRef prototype object\nis the intrinsic object %ObjectPrototype%.\n","features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/prototype-from-newtarget-abrupt.js","esid":" sec-weak-ref-target","description":" >Return abrupt from getting the NewTarget prototype\n","info":" |WeakRef ( target )\n\n...\n3. Let weakRef be ? OrdinaryCreateFromConstructor(NewTarget,\"%WeakRefPrototype%\", « [[Target]] »).\n4. Perfom ! KeepDuringJob(target).\n5. Set weakRef.[[Target]] to target.\n6. Return weakRef.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n","features":["WeakRef","Reflect.construct"]},{"path":"./test262/test/built-ins/WeakRef/prototype-from-newtarget-custom.js","esid":" sec-weak-ref-target","description":" >The [[Prototype]] internal slot is computed from NewTarget.\n","info":" |WeakRef ( target )\n\n...\n3. Let weakRef be ? OrdinaryCreateFromConstructor(NewTarget,\"%WeakRefPrototype%\", « [[Target]] »).\n4. Perfom ! KeepDuringJob(target).\n5. Set weakRef.[[Target]] to target.\n6. Return weakRef.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\n5. Return proto.\n","features":["WeakRef","Reflect.construct"]},{"path":"./test262/test/built-ins/WeakRef/prototype-from-newtarget.js","esid":" sec-weak-ref-target","description":" >The [[Prototype]] internal slot is computed from NewTarget.\n","info":" |WeakRef ( target )\n\n...\n3. Let weakRef be ? OrdinaryCreateFromConstructor(NewTarget,\"%WeakRefPrototype%\", « [[Target]] »).\n4. Perfom ! KeepDuringJob(target).\n5. Set weakRef.[[Target]] to target.\n6. Return weakRef.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\n5. Return proto.\n","features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/returns-new-object-from-constructor.js","esid":" sec-weak-ref-target","description":" >Returns a new ordinary object from the WeakRef constructor\n","info":" |WeakRef ( target )\n\n...\n3. Let weakRef be ? OrdinaryCreateFromConstructor(NewTarget,\"%WeakRefPrototype%\", « [[Target]] »).\n4. Perfom ! KeepDuringJob(target).\n5. Set weakRef.[[Target]] to target.\n6. Return weakRef.\n\nOrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )\n\n...\n2. Let proto be ? GetPrototypeFromConstructor(constructor, intrinsicDefaultProto).\n3. Return ObjectCreate(proto, internalSlotsList).\n\nGetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )\n\n3. Let proto be ? Get(constructor, 'prototype').\n4. If Type(proto) is not Object, then\na. Let realm be ? GetFunctionRealm(constructor).\nb. Set proto to realm's intrinsic object named intrinsicDefaultProto.\n5. Return proto.\n","features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/target-not-object-throws.js","esid":" sec-weak-ref-target","description":" >Throws a TypeError if target is not Object\n","info":" |WeakRef ( target )\n\n1. If NewTarget is undefined, throw a TypeError exception.\n2. If Type(target) is not Object, throw a TypeError exception.\n...\n","features":["WeakRef"]},{"path":"./test262/test/built-ins/WeakRef/undefined-newtarget-throws.js","esid":" sec-weak-ref-target","description":" >Throws a TypeError if NewTarget is undefined.\n","info":" |WeakRef ( target )\n\n1. If NewTarget is undefined, throw a TypeError exception.\n2. If Type(target) is not Object, throw a TypeError exception.\n...\n","features":["WeakRef"]},{"path":"./test262/test/language/expressions/class/subclass-builtins/subclass-AggregateError.js","description":" new SubAggregateError() instanceof AggregateError (Subclass instanceof Heritage)","features":["AggregateError"],"flags":["generated"]},{"path":"./test262/test/language/expressions/class/subclass-builtins/subclass-WeakRef.js","description":" new SubWeakRef() instanceof WeakRef (Subclass instanceof Heritage)","features":["WeakRef"],"flags":["generated"]},{"path":"./test262/test/language/statements/class/subclass-builtins/subclass-AggregateError.js","description":" new SubAggregateError() instanceof AggregateError (Subclass instanceof Heritage)","features":["AggregateError"],"flags":["generated"]},{"path":"./test262/test/language/statements/class/subclass-builtins/subclass-WeakRef.js","description":" new SubWeakRef() instanceof WeakRef (Subclass instanceof Heritage)","features":["WeakRef"],"flags":["generated"]}]
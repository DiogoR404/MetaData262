[{"path": "test/language/identifiers/part-unicode-13.0.0-escaped.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v13.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-13.0.0.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v13.0.0 ID_Continue characters are accepted as\nidentifier part characters.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-14.0.0-class-escaped.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v14.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\nin private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-14.0.0-class.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v14.0.0 ID_Continue characters are accepted as\nidentifier part characters in private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-14.0.0-escaped.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v14.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-14.0.0.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v14.0.0 ID_Continue characters are accepted as\nidentifier part characters.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-5.2.0-class-escaped.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v5.2.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\nin private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-5.2.0-class.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v5.2.0 ID_Continue characters are accepted as\nidentifier part characters in private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-5.2.0-escaped.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v5.2.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-5.2.0.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v5.2.0 ID_Continue characters are accepted as\nidentifier part characters.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-6.0.0-class-escaped.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v6.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\nin private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-6.0.0-class.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v6.0.0 ID_Continue characters are accepted as\nidentifier part characters in private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-6.0.0-escaped.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v6.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-6.0.0.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v6.0.0 ID_Continue characters are accepted as\nidentifier part characters.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-6.1.0-class-escaped.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v6.1.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\nin private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-6.1.0-class.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v6.1.0 ID_Continue characters are accepted as\nidentifier part characters in private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-6.1.0-escaped.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v6.1.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-6.1.0.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v6.1.0 ID_Continue characters are accepted as\nidentifier part characters.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-7.0.0-class-escaped.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v7.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\nin private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-7.0.0-class.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v7.0.0 ID_Continue characters are accepted as\nidentifier part characters in private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-7.0.0-escaped.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v7.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-7.0.0.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v7.0.0 ID_Continue characters are accepted as\nidentifier part characters.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-8.0.0-class-escaped.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v8.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\nin private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-8.0.0-class.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v8.0.0 ID_Continue characters are accepted as\nidentifier part characters in private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-8.0.0-escaped.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v8.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-8.0.0.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v8.0.0 ID_Continue characters are accepted as\nidentifier part characters.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-9.0.0-class-escaped.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v9.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\nin private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-9.0.0-class.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v9.0.0 ID_Continue characters are accepted as\nidentifier part characters in private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/part-unicode-9.0.0-escaped.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v9.0.0 ID_Continue characters are accepted as\nidentifier part characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-unicode-9.0.0.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v9.0.0 ID_Continue characters are accepted as\nidentifier part characters.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/part-zwj-zwnj-escaped.js", "author": " Adam Kluball", "esid": " sec-names-and-keywords", "description": " zero width joiner and zero width non-joiner are valid identifier parts"}, {"path": "test/language/identifiers/start-dollar-sign.js", "info": " \"IdentifierPart ", "version": 5, "esid": " 7.6_A2.1_T2", "description": " \"IdentifierStart "}, {"path": "test/language/identifiers/start-escape-seq.js", "info": " \"IdentifierPart ", "version": 5, "esid": " 7.6_A2.1_T4", "description": " \"IdentifierStart "}, {"path": "test/language/identifiers/start-underscore.js", "info": " \"IdentifierPart ", "version": 5, "esid": " 7.6_A2.1_T3", "description": " \"IdentifierStart "}, {"path": "test/language/identifiers/start-unicode-10.0.0-class-escaped.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v10.0.0 ID_Start characters are accepted as\nidentifier start characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\nin private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/start-unicode-10.0.0-class.js", "author": " Mathias Bynens", "esid": " prod-PrivateIdentifier", "description": " |Test that Unicode v10.0.0 ID_Start characters are accepted as\nidentifier start characters in private class fields.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n", "features": ["class", "class-fields-private"]}, {"path": "test/language/identifiers/start-unicode-10.0.0-escaped.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v10.0.0 ID_Start characters are accepted as\nidentifier start characters in escaped form, i.e.\n- \\uXXXX or \\u{XXXX} for BMP symbols\n- \\u{XXXXXX} for astral symbols\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}, {"path": "test/language/identifiers/start-unicode-10.0.0.js", "author": " Mathias Bynens", "esid": " sec-names-and-keywords", "description": " |Test that Unicode v10.0.0 ID_Start characters are accepted as\nidentifier start characters.\n", "info": " |Generated by https://github.com/mathiasbynens/caniunicode\n"}]
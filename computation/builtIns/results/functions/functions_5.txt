 eval (x)
 parseInt (string , radix)
 parseFloat (string)
 isNaN (number)
 isFinite (number)
 decodeURI (encodedURI)
 decodeURIComponent (encodedURIComponent)
 encodeURI (uri)
 encodeURIComponent (uriComponent)
 Object ( . . . )
 Function ( . . . )
 Array ( . . . )
 String ( . . . )
 Boolean ( . . . )
 Number ( . . . )
 Date ( . . . )
 RegExp ( . . . )
 Error ( . . . )
 EvalError ( . . . )
 RangeError ( . . . )
 ReferenceError ( . . . )
 SyntaxError ( . . . )
 TypeError ( . . . )
 URIError ( . . . )
 Object ( [ value ] )
 new Object ( [ value ] )
 Object.getPrototypeOf ( O )
 Object.getOwnPropertyDescriptor ( O, P )
 Object.getOwnPropertyNames ( O )
 Object.create ( O [, Properties] )
 Object.defineProperty ( O, P, Attributes )
 Object.defineProperties ( O, Properties )
 Object.seal ( O )
 Object.freeze ( O )
 Object.preventExtensions ( O )
 Object.isSealed ( O )
 Object.isFrozen ( O )
 Object.isExtensible ( O )
 Object.keys ( O )
 Object.prototype.toString ( )
 Object.prototype.toLocaleString ( )
 Object.prototype.valueOf ( )
 Object.prototype.hasOwnProperty (V)
 Object.prototype.isPrototypeOf (V)
 Object.prototype.propertyIsEnumerable (V)
 Function (p1, p2, &hellip; , pn, body)
 new Function (p1, p2, &hellip; , pn, body)
 Function.prototype.toString ( )
 Function.prototype.apply (thisArg, argArray)
 Function.prototype.call (thisArg [ , arg1 [ , arg2, &hellip; ] ] )
 Function.prototype.bind (thisArg [, arg1 [, arg2, &hellip;]])
 [[HasInstance]] (V)
 [[HasInstance]] (V)
 [[Get]] (P)
 Array ( [ item1 [ , item2 [ , &hellip; ] ] ] )
 new Array ( [ item0 [ , item1 [ , &hellip; ] ] ] )
 new Array (len)
 Array.isArray ( arg )
 Array.prototype.toString ( )
 Array.prototype.toLocaleString ( )
 Array.prototype.concat ( [ item1 [ , item2 [ , &hellip; ] ] ] )
 Array.prototype.join (separator)
 Array.prototype.pop ( )
 Array.prototype.push ( [ item1 [ , item2 [ , &hellip; ] ] ] )
 Array.prototype.reverse ( )
 Array.prototype.shift ( )
 Array.prototype.slice (start, end)
 Array.prototype.sort (comparefn)
 Array.prototype.splice (start, deleteCount [ , item1 [ , item2 [ , &hellip; ] ] ] )
 Array.prototype.unshift ( [ item1 [ , item2 [ , &hellip; ] ] ] )
 Array.prototype.indexOf ( searchElement [ , fromIndex ] )
 Array.prototype.lastIndexOf ( searchElement [ , fromIndex ] )
 Array.prototype.every ( callbackfn [ , thisArg ] )
 Array.prototype.some ( callbackfn [ , thisArg ] )
 Array.prototype.forEach ( callbackfn [ , thisArg ] )
 Array.prototype.map ( callbackfn [ , thisArg ] )
 Array.prototype.filter ( callbackfn [ , thisArg ] )
 Array.prototype.reduce ( callbackfn [ , initialValue ] )
 Array.prototype.reduceRight ( callbackfn [ , initialValue ] )
 [[DefineOwnProperty]] ( P, Desc, Throw )
 String ( [ value ] )
 new String ( [ value ] )
 String.fromCharCode ( [ char0 [ , char1 [ , &hellip; ] ] ] )
 String.prototype.toString ( )
 String.prototype.valueOf ( )
 String.prototype.charAt (pos)
 String.prototype.charCodeAt (pos)
 String.prototype.concat ( [ string1 [ , string2 [ , &hellip; ] ] ] )
 String.prototype.indexOf (searchString, position)
 String.prototype.lastIndexOf (searchString, position)
 String.prototype.localeCompare (that)
 String.prototype.match (regexp)
 String.prototype.replace (searchValue, replaceValue)
 String.prototype.search (regexp)
 String.prototype.slice (start, end)
 String.prototype.split (separator, limit)
 String.prototype.substring (start, end)
 String.prototype.toLowerCase ( )
 String.prototype.toLocaleLowerCase ( )
 String.prototype.toUpperCase ( )
 String.prototype.toLocaleUpperCase ( )
 String.prototype.trim ( )
 [[GetOwnProperty]] ( P )
 Boolean (value)
 new Boolean (value)
 Boolean.prototype.toString ( )
 Boolean.prototype.valueOf ( )
 Number ( [ value ] )
 new Number ( [ value ] )
 Number.prototype.toString ( [ radix ] )
 Number.prototype.toLocaleString()
 Number.prototype.valueOf ( )
 Number.prototype.toFixed (fractionDigits)
 Number.prototype.toExponential (fractionDigits)
 Number.prototype.toPrecision (precision)
 abs (x)
 acos (x)
 asin (x)
 atan (x)
 atan2 (y, x)
 ceil (x)
 cos (x)
 exp (x)
 floor (x)
 log (x)
 max ( [ value1 [ , value2 [ , &hellip; ] ] ] )
 min ( [ value1 [ , value2 [ , &hellip; ] ] ] )
 pow (x, y)
 random ( )
 round (x)
 sin (x)
 sqrt (x)
 tan (x)
 MakeTime (hour, min, sec, ms)
 MakeDay (year, month, date)
 MakeDate (day, time)
 TimeClip (time)
 Date ( [ year [, month [, date [, hours [, minutes [, seconds [, ms ] ] ] ] ] ] ] )
 new Date (year, month [, date [, hours [, minutes [, seconds [, ms ] ] ] ] ] )
 new Date (value)
 new Date ( )
 Date.parse (string)
 Date.UTC (year, month [, date [, hours [, minutes [, seconds [, ms ] ] ] ] ] )
 Date.now ( )
 Date.prototype.toString ( )
 Date.prototype.toDateString ( )
 Date.prototype.toTimeString ( )
 Date.prototype.toLocaleString ( )
 Date.prototype.toLocaleDateString ( )
 Date.prototype.toLocaleTimeString ( )
 Date.prototype.valueOf ( )
 Date.prototype.getTime ( )
 Date.prototype.getFullYear ( )
 Date.prototype.getUTCFullYear ( )
 Date.prototype.getMonth ( )
 Date.prototype.getUTCMonth ( )
 Date.prototype.getDate ( )
 Date.prototype.getUTCDate ( )
 Date.prototype.getDay ( )
 Date.prototype.getUTCDay ( )
 Date.prototype.getHours ( )
 Date.prototype.getUTCHours ( )
 Date.prototype.getMinutes ( )
 Date.prototype.getUTCMinutes ( )
 Date.prototype.getSeconds ( )
 Date.prototype.getUTCSeconds ( )
 Date.prototype.getMilliseconds ( )
 Date.prototype.getUTCMilliseconds ( )
 Date.prototype.getTimezoneOffset ( )
 Date.prototype.setTime (time)
 Date.prototype.setMilliseconds (ms)
 Date.prototype.setUTCMilliseconds (ms)
 Date.prototype.setSeconds (sec [, ms ] )
 Date.prototype.setUTCSeconds (sec [, ms ] )
 Date.prototype.setMinutes (min [, sec [, ms ] ] )
 Date.prototype.setUTCMinutes (min [, sec [, ms ] ] )
 Date.prototype.setHours (hour [, min [, sec [, ms ] ] ] )
 Date.prototype.setUTCHours (hour [, min [, sec [, ms ] ] ] )
 Date.prototype.setDate (date)
 Date.prototype.setUTCDate (date)
 Date.prototype.setMonth (month [, date ] )
 Date.prototype.setUTCMonth (month [, date ] )
 Date.prototype.setFullYear (year [, month [, date ] ] )
 Date.prototype.setUTCFullYear (year [, month [, date ] ] )
 Date.prototype.toUTCString ( )
 Date.prototype.toISOString ( )
 Date.prototype.toJSON ( key )
 RegExp (Regular Expression) Objects
 RegExp(pattern, flags)
 new RegExp(pattern, flags)
 RegExp.prototype.exec(string)
 RegExp.prototype.test(string)
 RegExp.prototype.toString()
 Error (message)
 new Error (message)
 Error.prototype.toString ( )
 NativeError (message)
 new NativeError (message)
 parse ( text [ , reviver ] )
 stringify ( value [ , replacer [ , space ] ] )
 escape (string)
 unescape (string)
 String.prototype.substr (start, length)
 Date.prototype.getYear ( )
 Date.prototype.setYear (year)
 Date.prototype.toGMTString ( )